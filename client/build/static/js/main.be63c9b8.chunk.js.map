{"version":3,"sources":["services/SocketService.js","services/LocalStorageService.js","components/Join/Join.js","components/QuitBtn/QuitBtn.js","components/WaitingRoom/WaitingRoom.js","components/NameScorePanel/NameScorePanel.js","components/QuestionLoading/QuestionLoading.js","components/QuestionOptions/QuestionOption/QuestionOption.js","components/QuestionOptions/QuestionOptions.js","components/StatusModal/StatusModal.js","components/QuestionResult/QuestionResult.js","App.js","reportWebVitals.js","index.js"],"names":["Socket","window","socket","keyPrefix","LocalStorageService","key","value","JSON","stringify","localStorage","setItem","item","getItem","parse","removeItem","clear","Join","props","useState","partyCode","setPartyCode","name","setName","showCodeWarning","setShowCodeWarning","showNameWarning","setShowNameWarning","showSpinner","setShowSpinner","useEffect","on","setModalTitle","setModalBody","setShowModal","off","className","onSubmit","e","preventDefault","isValid","length","console","log","connected","document","querySelector","append","disconnected","connect","emit","partyId","emitName","emitPartyId","id","htmlFor","onChange","target","type","maxLength","placeholder","autoComplete","required","class","role","aria-hidden","href","QuitBtn","onClick","close","WaitingRoom","NameScorePanel","score","NaN","QuestionLoading","QuestionOption","letter","color","disabled","QuestionOptions","count","undefined","selectedOption","setSelectedOption","letters","colors","parseInt","currentTarget","options","i","push","StatusModal","closeModal","setIsOpen","Modal","show","isOpen","onHide","Header","closeButton","Title","title","Body","body","Footer","Button","variant","QuestionResult","isCorrect","text","icon","App","isConnected","setIsConnected","setPartyId","setScore","showModal","modalTitle","modalBody","scoreRef","useRef","current","initView","view","setView","handleQuestionResult","points","uuid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iWACeA,G,MADAC,OAAOC,QCAhBC,EAAY,eACZC,EAAsB,CAE5BA,QAA8B,SAACC,EAAKC,GAClCA,EAAQC,KAAKC,UAAU,CAAEF,MAAOA,IAChCG,aAAaC,QAAQP,EAAYE,EAAKC,IAGxCF,QAA8B,SAACC,GAC7B,IAAIM,EAAOF,aAAaG,QAAQT,EAAYE,GAC5C,OAAa,OAATM,EACKJ,KAAKM,MAAMF,GAAML,MAEnB,MAGTF,WAAiC,SAACC,GAChCI,aAAaK,WAAWX,EAAYE,IAGtCD,MAA4B,WAC1BK,aAAaM,UAGAX,I,eC4FAY,MA/Gf,SAAcC,GAAQ,IAAD,EACeC,mBAASd,EAAoBQ,QAAQ,YADpD,mBACZO,EADY,KACDC,EADC,OAEKF,mBAASd,EAAoBQ,QAAQ,SAF1C,mBAEZS,EAFY,KAENC,EAFM,OAG2BJ,qBAH3B,mBAGZK,EAHY,KAGKC,EAHL,OAI2BN,qBAJ3B,mBAIZO,EAJY,KAIKC,EAJL,OAKmBR,oBAAS,GAL5B,mBAKZS,EALY,KAKCC,EALD,KAmDnB,OA5CAC,qBAAU,WAaR,OAZA7B,EAAO8B,GAAG,iBAAiB,WAEzBb,EAAMc,cAAc,UACpBd,EAAMe,aAAN,uDACAf,EAAMgB,cAAa,MAErBjC,EAAO8B,GAAG,aAAa,WACrBb,EAAMc,cAAc,UACpBd,EAAMe,aAAN,8FACAf,EAAMgB,cAAa,MAGd,WACLjC,EAAOkC,IAAI,iBACXlC,EAAOkC,IAAI,gBAEZ,IA4BD,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,wBAAd,mCAGJ,qBAAKA,UAAU,MAAf,SACE,uBAAMC,SAjCK,SAACC,GAChBA,EAAEC,iBACF,IAAIC,GAAU,EACVpB,EAAUqB,OAAS,IACrBhB,GAAmB,GACnBe,GAAU,GAERlB,EAAKmB,OAAS,IAChBd,GAAmB,GACnBa,GAAU,GAERA,IACFX,GAAe,GACfa,QAAQC,IAAI,aAAc1C,EAAO2C,WACjCC,SAASC,cAAc,QAAQC,OAA/B,yBAAwD9C,EAAO2C,UAA/D,UACI3C,EAAO+C,cACT/C,EAAOgD,UAEThD,EAAOiD,KAAK,YAAa,CAAE5B,OAAM6B,QAAS/B,IAC1Cf,EAAoBM,QAAQ,OAAQW,GACpCJ,EAAMkC,SAAS9B,GACfJ,EAAMmC,YAAYjC,KAYUkC,GAAG,WAA7B,UACE,sBAAKlB,UAAU,aAAf,UACE,uBAAOmB,QAAQ,iBAAiBD,GAAG,iBAAiBlB,UAAU,aAA9D,wBACA,uBAAOoB,SAAU,SAAAlB,GAAC,OAAIjB,EAAaiB,EAAEmB,OAAOlD,QAC1CA,MAAOa,EACPsC,KAAK,OACLJ,GAAG,iBACHlB,UAAU,8BACVuB,UAAU,IACVC,YAAY,sBACZC,aAAa,MACbC,UAAQ,IAETtC,GACC,qBAAKY,UAAU,2BAAf,oDAKJ,sBAAKA,UAAU,aAAf,UACE,uBAAOmB,QAAQ,YAAYD,GAAG,YAAYlB,UAAU,aAApD,kBACA,uBAAOoB,SAAU,SAAAlB,GAAC,OAAIf,EAAQe,EAAEmB,OAAOlD,QACrCA,MAAOe,EACPoC,KAAK,OACLJ,GAAG,YACHlB,UAAU,eACVuB,UAAU,KACVC,YAAY,kBACZE,UAAQ,IAETpC,GACC,qBAAKU,UAAU,2BAAf,gCAKJ,yBAAQsB,KAAK,SAASJ,GAAG,UAAUlB,UAAU,gBAA7C,UACGR,GAAe,sBAAMmC,MAAM,mCAAmCC,KAAK,SAASC,cAAY,UACvFrC,GAAe,gDAIvB,qBAAKQ,UAAU,MAAf,SACE,yBAAQA,UAAU,qCAAlB,mDAEE,iCAAQ,mBAAGA,UAAU,aAAa8B,KAAK,8BAA8BT,OAAO,SAApE,6C,MC3FHU,MAff,WAME,OACE,wBACE/B,UAAU,cACVgC,QAPJ,WACEnE,EAAOoE,SAIP,SAGE,6C,MCESC,MAXf,WACE,OACE,sBAAKlC,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,wBACA,yE,MCKSmC,MAXf,YAA0C,IAAhBjD,EAAe,EAAfA,KAAMkD,EAAS,EAATA,MAC9B,OACE,yBAAQpC,UAAU,2BAAlB,UACE,sBAAMA,UAAU,sBAAhB,SAAwCd,IAC7B,OAAVkD,GAA4BC,MAAVD,GACjB,sBAAMpC,UAAU,uBAAhB,SAAyCoC,Q,MCMlCE,MAXf,WACE,OACE,sBAAKtC,UAAU,4BAAf,UACE,qBAAKA,UAAU,qCAAqC4B,KAAK,SAAzD,SACE,sBAAM5B,UAAU,UAAhB,0BAEF,oBAAIA,UAAU,aAAd,4B,YCKSuC,MAXf,YAAoE,IAA3CC,EAA0C,EAA1CA,OAAQrE,EAAkC,EAAlCA,MAAOsE,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUV,EAAU,EAAVA,QAEnDhC,EAAS,eAAWyC,EAAX,8BAEb,OACE,wBAAQzC,UAAWA,EAAWgC,QAASA,EAAS7D,MAAOA,EAAOuE,SAAUA,EAAxE,SACGF,KCiCQG,MApCf,YAAmC,IAATC,EAAQ,EAARA,MAAQ,EACY7D,wBAAS8D,GADrB,mBACzBC,EADyB,KACTC,EADS,KAE1BC,EAAU,CACd,IAAK,IAAK,IAAK,KAEXC,EAAS,CACb,MAAO,SAAU,QAAS,UAG5B,SAAShD,EAASC,GAChBA,EAAEC,iBACF,IAAIhC,EAAQ+E,SAAShD,EAAEiD,cAAchF,OACrC4E,EAAkB5E,GAClBN,EAAOiD,KAAK,eAAgB3C,GAI9B,IADA,IAAIiF,EAAU,GACLC,EAAI,EAAGA,EAAIT,EAAOS,IACzBD,EAAQE,KAAK,cAAC,EAAD,CACXtB,QAAS/B,EACT9B,MAAOkF,EACPb,OAAQQ,EAAQK,GAChBZ,WAA2BI,IAAnBC,GAAgCA,IAAmBO,EAAKJ,EAAOI,GAAK,OAC5EX,cAA6BG,IAAnBC,KAId,OACE,qBAAK9C,UAAU,4BAAf,SACE,qBAAKA,UAAU,oCAAf,SACGoD,O,gBCdMG,MAnBf,SAAqBzE,GAEnB,SAAS0E,IACP1E,EAAM2E,WAAU,GAGlB,OACE,eAACC,EAAA,EAAD,CAAOC,KAAM7E,EAAM8E,OAAQC,OAAQL,EAAnC,UACE,cAACE,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAclF,EAAMmF,UAEtB,cAACP,EAAA,EAAMQ,KAAP,UAAapF,EAAMqF,OACnB,cAACT,EAAA,EAAMU,OAAP,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYtC,QAASwB,EAArC,yB,MCKKe,MAlBf,YAA6C,IAApBC,EAAmB,EAAnBA,UAAWpC,EAAQ,EAARA,MAE9BqC,EAAOD,EAAY,WAAa,aAChCE,EAAOF,EAAY,QAAU,QAC7BxE,EAAYwE,EAAY,aAAe,YAG3C,OAFAxE,GAAa,4BAGX,sBAAKA,UAAWA,EAAhB,UACE,oBAAIA,UAAU,sBAAd,SAAqCyE,IACrC,qBAAKzE,UAAU,sBAAf,SACE,mBAAGA,UAAU,iBAAb,SAA+B0E,MAEjC,uBAAM1E,UAAU,wBAAhB,cAA0CoC,SC0FjCuC,MA5Ff,WAAgB,IAAD,EACyB5F,oBAAS,GADlC,mBACN6F,EADM,KACOC,EADP,OAEW9F,mBAASd,EAAoBQ,QAAQ,SAFhD,gCAGWM,mBAASd,EAAoBQ,QAAQ,UAHhD,mBAGNS,EAHM,KAGAC,EAHA,OAIiBJ,mBAASd,EAAoBQ,QAAQ,YAJtD,mBAINsC,EAJM,KAIG+D,EAJH,OAKa/F,mBAAS,GALtB,mBAKNqD,EALM,KAKC2C,EALD,OAOqBhG,oBAAS,GAP9B,mBAONiG,EAPM,KAOKlF,EAPL,OAQuBf,mBAAS,IARhC,mBAQNkG,EARM,KAQMrF,EARN,OASqBb,mBAAS,IAT9B,mBASNmG,EATM,KASKrF,EATL,KAWPsF,EAAWC,mBAEjBD,EAASE,QAAUjD,EAEnB,IAAMkD,EACJ,cAAC,EAAD,CACEpG,KAAMA,EACN6B,QAASA,EACTC,SAAU7B,EACV8B,YAAa6D,EACbhF,aAAcA,EACdF,cAAeA,EACfC,aAAcA,IAvBL,EAyBWd,mBAASuG,GAzBpB,mBAyBNC,EAzBM,KAyBAC,EAzBA,KAuEb,SAASC,EAAT,GAAoD,IAArBjB,EAAoB,EAApBA,UAAWkB,EAAS,EAATA,OACxCX,EAASI,EAASE,QAAUK,GAC5BF,EAAQ,cAAC,EAAD,CAAgBhB,UAAWA,EAAWpC,MAAOsD,KAGvD,OAjDAhG,qBAAU,WAsCR,OArCA7B,EAAO8B,GAAG,eAAe,YAAwB,IAArBoB,EAAoB,EAApBA,QAAS4E,EAAW,EAAXA,KAEnC1H,EAAoBM,QAAQ,UAAWwC,GACvC9C,EAAoBM,QAAQ,OAAQoH,GACpCd,GAAe,GACfW,EAAQ,cAAC,EAAD,KACRlF,QAAQC,IAAR,gBAAqBQ,EAArB,gBAGFlD,EAAO8B,GAAG,cAAc,WACtBkF,GAAe,GACfE,EAAS,GACTnF,EAAc,gBACdC,EAAa,sEACbC,GAAa,GACb0F,EAAQF,MAGVzH,EAAO8B,GAAG,mBAAmB,WAC3B6F,EAAQ,cAAC,EAAD,QAGV3H,EAAO8B,GAAG,eAAe,SAACiD,GACxB4C,EAAQ,cAAC,EAAD,CAAiB5C,MAAOA,QAGlC/E,EAAO8B,GAAG,iBAAkB8F,GAE5B5H,EAAO8B,GAAG,cAAc,WACtBW,QAAQC,IAAI,gBACZsE,GAAe,GACfC,EAAW7G,EAAoBQ,QAAQ,YACvCsG,EAAS,GACTS,EAAQF,GACRzH,EAAOgD,aAGF,WACLhD,EAAOkC,IAAI,eACXlC,EAAOkC,IAAI,iBAEZ,IAQD,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,CAAaiE,MAAOgB,EAAYd,KAAMe,EAAWtB,OAAQoB,EAAWvB,UAAW3D,IAC9E8E,GACC,cAAC,EAAD,IAEDW,EACAX,GACC,cAAC,EAAD,CAAgB1F,KAAMA,EAAMkD,MAAOA,UCtF9BwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9F,SAAS+F,eAAe,SAM1BZ,M","file":"static/js/main.be63c9b8.chunk.js","sourcesContent":["const Socket = window.socket;\r\nexport default Socket;","const keyPrefix = 'studygorize-';\r\nconst LocalStorageService = {};\r\n\r\nLocalStorageService.setItem = (key, value) => {\r\n  value = JSON.stringify({ value: value });\r\n  localStorage.setItem(keyPrefix + key, value);\r\n};\r\n\r\nLocalStorageService.getItem = (key) => {\r\n  let item = localStorage.getItem(keyPrefix + key);\r\n  if (item !== null) {\r\n    return JSON.parse(item).value;\r\n  }\r\n  return null;\r\n};\r\n\r\nLocalStorageService.removeItem = (key) => {\r\n  localStorage.removeItem(keyPrefix + key);\r\n}\r\n\r\nLocalStorageService.clear = () => {\r\n  localStorage.clear();\r\n}\r\n\r\nexport default LocalStorageService;","import { useEffect, useState } from 'react';\r\nimport './Join.css';\r\nimport Socket from '../../services/SocketService';\r\nimport LocalStorageService from '../../services/LocalStorageService';\r\n\r\nfunction Join(props) {\r\n  const [partyCode, setPartyCode] = useState(LocalStorageService.getItem('partyId'));\r\n  const [name, setName] = useState(LocalStorageService.getItem('name'));\r\n  const [showCodeWarning, setShowCodeWarning] = useState();\r\n  const [showNameWarning, setShowNameWarning] = useState();\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Socket.on('partyNotExist', () => {\r\n      // show warning\r\n      props.setModalTitle('Uh oh!');\r\n      props.setModalBody(`It looks like that party doesn't exist 🙁`);\r\n      props.setShowModal(true);\r\n    });\r\n    Socket.on('nameTaken', () => {\r\n      props.setModalTitle('Oh no!');\r\n      props.setModalBody(`It looks like that name is already taken 😦\\nTry something a little more unique!`);\r\n      props.setShowModal(true);\r\n    });\r\n\r\n    return () => {\r\n      Socket.off('partyNotExist');\r\n      Socket.off('nameTaken');\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    if (partyCode.length < 4) {\r\n      setShowCodeWarning(true);\r\n      isValid = false;\r\n    }\r\n    if (name.length < 1) {\r\n      setShowNameWarning(true);\r\n      isValid = false;\r\n    }\r\n    if (isValid) {\r\n      setShowSpinner(true);\r\n      console.log(\"Connected:\", Socket.connected);\r\n      document.querySelector('body').append(`<h1>Connected: ${Socket.connected}</h1>`);\r\n      if (Socket.disconnected) {\r\n        Socket.connect();\r\n      }\r\n      Socket.emit('joinParty', { name, partyId: partyCode });\r\n      LocalStorageService.setItem('name', name);\r\n      props.emitName(name);\r\n      props.emitPartyId(partyCode);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Join-container\">\r\n      <div className=\"row\">\r\n        <div className=\"Join-header\">\r\n          <h1 className=\"theme-font text-light\">Studygorize Party</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={onSubmit} id=\"joinForm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"partyCodeInput\" id=\"partyCodeLabel\" className=\"text-light\">Party Code</label>\r\n            <input onChange={e => setPartyCode(e.target.value)} \r\n              value={partyCode}\r\n              type=\"text\" \r\n              id=\"partyCodeInput\" \r\n              className=\"form-control text-uppercase\" \r\n              maxLength=\"4\" \r\n              placeholder=\"enter 4-letter code\"\r\n              autoComplete=\"off\"\r\n              required\r\n              />\r\n            {showCodeWarning &&\r\n              <div className=\"alert alert-warning mt-1\">\r\n                The code needs to be 4 letters long\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"nameInput\" id=\"nameLabel\" className=\"text-light\">Name</label>\r\n            <input onChange={e => setName(e.target.value)} \r\n              value={name}\r\n              type=\"text\" \r\n              id=\"nameInput\" \r\n              className=\"form-control\" \r\n              maxLength=\"12\" \r\n              placeholder=\"enter your name\"\r\n              required\r\n              />\r\n            {showNameWarning &&\r\n              <div className=\"alert alert-warning mt-1\">\r\n                Enter your name\r\n              </div>\r\n            }\r\n          </div>\r\n          <button type=\"submit\" id=\"joinBtn\" className=\"btn btn-light\">\r\n            {showSpinner && <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>}\r\n            {!showSpinner && <span>Join</span>}\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"row\">\r\n        <footer className=\"Join-footer text-light text-center\">\r\n          Create your own Studygorize account at\r\n          <strong><a className=\"text-light\" href=\"https://studygorize.web.app\" target=\"_blank\"> studygorize.web.app</a></strong>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Join;\r\n","import './QuitBtn.css';\r\nimport Socket from '../../services/SocketService';\r\n\r\nfunction QuitBtn() {\r\n\r\n  function onQuit() {\r\n    Socket.close();\r\n  }\r\n\r\n  return (\r\n    <button \r\n      className=\"QuitBtn btn\" \r\n      onClick={onQuit}>\r\n      <strong>Quit</strong>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default QuitBtn\r\n","import QuitBtn from \"../QuitBtn/QuitBtn\"\r\n\r\nimport './WaitingRoom.css';\r\n\r\nfunction WaitingRoom() {\r\n  return (\r\n    <div className=\"WaitingRoom\">\r\n      <h2 className=\"theme-font\">You're in!</h2>\r\n      <span>\r\n        Waiting for the party to start...\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WaitingRoom\r\n","import './NameScorePanel.css';\r\n\r\nfunction NameScorePanel({ name, score }) {\r\n  return (\r\n    <footer className=\"NameScorePanel-container\">\r\n      <span className=\"NameScorePanel-name\">{ name }</span>\r\n      {score !== null && score !== NaN && \r\n        <span className=\"NameScorePanel-score\">{ score }</span>\r\n      }\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default NameScorePanel\r\n","import './QuestionLoading.css';\r\n\r\nfunction QuestionLoading() {\r\n  return (\r\n    <div className=\"QuestionLoading-container\">\r\n      <div className=\"spinner-custom spinner-border mb-2\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n      <h3 className=\"text-light\">Get Ready!</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionLoading\r\n","import './QuestionOption.css';\r\n\r\nfunction QuestionOption({letter, value, color, disabled, onClick}) {\r\n\r\n  let className = `text-${color} theme-font QuestionOption`;\r\n\r\n  return (\r\n    <button className={className} onClick={onClick} value={value} disabled={disabled}>\r\n      {letter}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default QuestionOption;\r\n","import './QuestionOptions.css';\r\nimport { useState } from 'react';\r\nimport Socket from '../../services/SocketService';\r\nimport QuestionOption from './QuestionOption/QuestionOption';\r\n\r\nfunction QuestionOptions({count}) {\r\n  const [selectedOption, setSelectedOption] = useState(undefined);\r\n  const letters = [\r\n    'A', 'B', 'C', 'D'\r\n  ];\r\n  const colors = [\r\n    'red', 'purple', 'green', 'yellow'\r\n  ];\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    let value = parseInt(e.currentTarget.value);\r\n    setSelectedOption(value);\r\n    Socket.emit('selectOption', value);\r\n  }\r\n\r\n  let options = [];\r\n  for (let i = 0; i < count; i++) {\r\n    options.push(<QuestionOption \r\n      onClick={onSubmit} \r\n      value={i} \r\n      letter={letters[i]} \r\n      color={(selectedOption === undefined || selectedOption === i) ? colors[i] : 'gray'} \r\n      disabled={selectedOption !== undefined} />\r\n    );  \r\n  }\r\n  \r\n  return (\r\n    <div className=\"QuestionOptions-container\">\r\n      <div className=\"QuestionOptions-options-container\">\r\n        {options}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionOptions\r\n","import { Modal, Button } from 'react-bootstrap';\r\n\r\nfunction StatusModal(props) {\r\n\r\n  function closeModal() {\r\n    props.setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.isOpen} onHide={closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.body}</Modal.Body>\r\n      <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StatusModal;\r\n","import './QuestionResult.css';\r\n\r\nfunction QuestionResult({isCorrect, score}) {\r\n\r\n  let text = isCorrect ? 'Correct!' : 'Incorrect!';\r\n  let icon = isCorrect ? 'check' : 'close';\r\n  let className = isCorrect ? 'bg-success' : 'bg-danger';\r\n  className += \" QuestionResult-container\";\r\n\r\n  return (\r\n    <div className={className}>\r\n      <h2 className=\"QuestionResult-text\">{text}</h2>\r\n      <div className=\"QuestionResult-icon\">\r\n        <i className=\"material-icons\">{icon}</i>\r\n      </div>\r\n      <span className=\"QuestionResult-points\">+{score}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionResult;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport Socket from './services/SocketService';\r\nimport LocalStorageService from './services/LocalStorageService';\r\nimport Join from './components/Join/Join';\r\nimport WaitingRoom from './components/WaitingRoom/WaitingRoom';\r\nimport QuitBtn from './components/QuitBtn/QuitBtn';\r\nimport NameScorePanel from './components/NameScorePanel/NameScorePanel';\r\nimport QuestionLoading from './components/QuestionLoading/QuestionLoading';\r\nimport QuestionOptions from './components/QuestionOptions/QuestionOptions';\r\nimport StatusModal from './components/StatusModal/StatusModal';\r\nimport QuestionResult from './components/QuestionResult/QuestionResult';\r\n\r\nfunction App() {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [uuid, setUuid] = useState(LocalStorageService.getItem('uuid'));\r\n  const [name, setName] = useState(LocalStorageService.getItem('name'));\r\n  const [partyId, setPartyId] = useState(LocalStorageService.getItem('partyId'));\r\n  const [score, setScore] = useState(0);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState('');\r\n  const [modalBody, setModalBody] = useState('');\r\n\r\n  const scoreRef = useRef();\r\n\r\n  scoreRef.current = score;\r\n\r\n  const initView = (\r\n    <Join \r\n      name={name} \r\n      partyId={partyId} \r\n      emitName={setName} \r\n      emitPartyId={setPartyId} \r\n      setShowModal={setShowModal} \r\n      setModalTitle={setModalTitle}\r\n      setModalBody={setModalBody} />\r\n  )\r\n  const [view, setView] = useState(initView);\r\n\r\n  useEffect(() => {\r\n    Socket.on('partyJoined', ({ partyId, uuid }) => {\r\n      // store these\r\n      LocalStorageService.setItem('partyId', partyId);\r\n      LocalStorageService.setItem('uuid', uuid);\r\n      setIsConnected(true);\r\n      setView(<WaitingRoom />)\r\n      console.log(`Party ${partyId} joined!`)\r\n    })\r\n\r\n    Socket.on('partyEnded', () => {\r\n      setIsConnected(false);\r\n      setScore(0);\r\n      setModalTitle('Disconnected');\r\n      setModalBody('You were disconnected from the party because it ended 😥');\r\n      setShowModal(true);\r\n      setView(initView);\r\n    });\r\n\r\n    Socket.on('questionLoading', () => {\r\n      setView(<QuestionLoading />)\r\n    });\r\n\r\n    Socket.on('showOptions', (count) => {\r\n      setView(<QuestionOptions count={count} />);\r\n    })\r\n\r\n    Socket.on('questionResult', handleQuestionResult);\r\n\r\n    Socket.on('disconnect', () => {\r\n      console.log('DISCONNECTED');\r\n      setIsConnected(false);\r\n      setPartyId(LocalStorageService.getItem('partyId'));\r\n      setScore(0);\r\n      setView(initView);\r\n      Socket.connect();\r\n    })\r\n\r\n    return () => {\r\n      Socket.off('partyJoined');\r\n      Socket.off('partyEnded');\r\n    }\r\n  }, []);\r\n\r\n  function handleQuestionResult({isCorrect, points}) {\r\n    setScore(scoreRef.current + points);\r\n    setView(<QuestionResult isCorrect={isCorrect} score={points} />)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App bg-primary\">\r\n      <div className=\"App-content\">\r\n        <StatusModal title={modalTitle} body={modalBody} isOpen={showModal} setIsOpen={setShowModal} />\r\n        {isConnected && \r\n          <QuitBtn />\r\n        }\r\n        {view}\r\n        {isConnected && \r\n          <NameScorePanel name={name} score={score} />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}