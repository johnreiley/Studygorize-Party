{"version":3,"sources":["services/SocketService.js","services/LocalStorageService.js","components/Join/Join.js","components/QuitBtn/QuitBtn.js","components/WaitingRoom/WaitingRoom.js","components/NameScorePanel/NameScorePanel.js","components/QuestionLoading/QuestionLoading.js","components/QuestionOptions/QuestionOption/QuestionOption.js","components/QuestionOptions/QuestionOptions.js","components/StatusModal/StatusModal.js","components/QuestionResult/QuestionResult.js","App.js","reportWebVitals.js","index.js"],"names":["Socket","window","socket","keyPrefix","LocalStorageService","key","value","JSON","stringify","localStorage","setItem","item","getItem","parse","removeItem","clear","Join","props","useState","partyCode","setPartyCode","name","setName","showCodeWarning","setShowCodeWarning","showNameWarning","setShowNameWarning","useEffect","on","setModalTitle","setModalBody","setShowModal","off","className","onSubmit","e","preventDefault","isValid","length","emit","partyId","emitName","emitPartyId","id","htmlFor","onChange","target","type","maxLength","placeholder","autoComplete","required","href","QuitBtn","onClick","close","WaitingRoom","NameScorePanel","score","NaN","QuestionLoading","role","QuestionOption","letter","color","disabled","QuestionOptions","count","undefined","selectedOption","setSelectedOption","letters","colors","parseInt","currentTarget","options","i","push","StatusModal","closeModal","setIsOpen","Modal","show","isOpen","onHide","Header","closeButton","Title","title","Body","body","Footer","Button","variant","QuestionResult","isCorrect","text","icon","App","isConnected","setIsConnected","setPartyId","setScore","showModal","modalTitle","modalBody","scoreRef","useRef","current","initView","view","setView","handleQuestionResult","points","uuid","console","log","connect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf93ea4.chunk.js","sourcesContent":["const Socket = window.socket;\r\nexport default Socket;","const keyPrefix = 'studygorize-';\r\nconst LocalStorageService = {};\r\n\r\nLocalStorageService.setItem = (key, value) => {\r\n  value = JSON.stringify({ value: value });\r\n  localStorage.setItem(keyPrefix + key, value);\r\n};\r\n\r\nLocalStorageService.getItem = (key) => {\r\n  let item = localStorage.getItem(keyPrefix + key);\r\n  if (item !== null) {\r\n    return JSON.parse(item).value;\r\n  }\r\n  return null;\r\n};\r\n\r\nLocalStorageService.removeItem = (key) => {\r\n  localStorage.removeItem(keyPrefix + key);\r\n}\r\n\r\nLocalStorageService.clear = () => {\r\n  localStorage.clear();\r\n}\r\n\r\nexport default LocalStorageService;","import { useEffect, useState } from 'react';\r\nimport './Join.css';\r\nimport Socket from '../../services/SocketService';\r\nimport LocalStorageService from '../../services/LocalStorageService';\r\n\r\nfunction Join(props) {\r\n  const [partyCode, setPartyCode] = useState(LocalStorageService.getItem('partyId'));\r\n  const [name, setName] = useState(LocalStorageService.getItem('name'));\r\n  const [showCodeWarning, setShowCodeWarning] = useState();\r\n  const [showNameWarning, setShowNameWarning] = useState();\r\n\r\n  useEffect(() => {\r\n    Socket.on('partyNotExist', () => {\r\n      // show warning\r\n      props.setModalTitle('Uh oh!');\r\n      props.setModalBody(`It looks like that party doesn't exist 🙁`);\r\n      props.setShowModal(true);\r\n    });\r\n    Socket.on('nameTaken', () => {\r\n      props.setModalTitle('Oh no!');\r\n      props.setModalBody(`It looks like that name is already taken 😦\\nTry something a little more unique!`);\r\n      props.setShowModal(true);\r\n    });\r\n\r\n    return () => {\r\n      Socket.off('partyNotExist');\r\n      Socket.off('nameTaken');\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    if (partyCode.length < 4) {\r\n      setShowCodeWarning(true);\r\n      isValid = false;\r\n    }\r\n    if (name.length < 1) {\r\n      setShowNameWarning(true);\r\n      isValid = false;\r\n    }\r\n    if (isValid) {\r\n      Socket.emit('joinParty', { name, partyId: partyCode });\r\n      LocalStorageService.setItem('name', name);\r\n      props.emitName(name);\r\n      props.emitPartyId(partyCode);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Join-container\">\r\n      <div className=\"row\">\r\n        <div className=\"Join-header\">\r\n          <h1 className=\"theme-font text-light\">Studygorize Party</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={onSubmit} id=\"joinForm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"partyCodeInput\" id=\"partyCodeLabel\" className=\"text-light\">Party Code</label>\r\n            <input onChange={e => setPartyCode(e.target.value)} \r\n              value={partyCode}\r\n              type=\"text\" \r\n              id=\"partyCodeInput\" \r\n              className=\"form-control text-uppercase\" \r\n              maxLength=\"4\" \r\n              placeholder=\"enter 4-letter code\"\r\n              autoComplete=\"off\"\r\n              required\r\n              />\r\n            {showCodeWarning &&\r\n              <div className=\"alert alert-warning mt-1\">\r\n                The code needs to be 4 letters long\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"nameInput\" id=\"nameLabel\" className=\"text-light\">Name</label>\r\n            <input onChange={e => setName(e.target.value)} \r\n              value={name}\r\n              type=\"text\" \r\n              id=\"nameInput\" \r\n              className=\"form-control\" \r\n              maxLength=\"12\" \r\n              placeholder=\"enter your name\"\r\n              required\r\n              />\r\n            {showNameWarning &&\r\n              <div className=\"alert alert-warning mt-1\">\r\n                Enter your name\r\n              </div>\r\n            }\r\n          </div>\r\n          <button type=\"submit\" id=\"joinBtn\" className=\"btn btn-light\">Join</button>\r\n        </form>\r\n      </div>\r\n      <div className=\"row\">\r\n        <footer className=\"Join-footer text-light text-center\">\r\n          Create your own Studygorize account at\r\n          <strong><a className=\"text-light\" href=\"https://studygorize.web.app\" target=\"_blank\"> studygorize.web.app</a></strong>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Join;\r\n","import './QuitBtn.css';\r\nimport Socket from '../../services/SocketService';\r\n\r\nfunction QuitBtn() {\r\n\r\n  function onQuit() {\r\n    Socket.close();\r\n  }\r\n\r\n  return (\r\n    <button \r\n      className=\"QuitBtn btn\" \r\n      onClick={onQuit}>\r\n      <strong>Quit</strong>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default QuitBtn\r\n","import QuitBtn from \"../QuitBtn/QuitBtn\"\r\n\r\nimport './WaitingRoom.css';\r\n\r\nfunction WaitingRoom() {\r\n  return (\r\n    <div className=\"WaitingRoom\">\r\n      <h2 className=\"theme-font\">You're in!</h2>\r\n      <span>\r\n        Waiting for the party to start...\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WaitingRoom\r\n","import './NameScorePanel.css';\r\n\r\nfunction NameScorePanel({ name, score }) {\r\n  return (\r\n    <footer className=\"NameScorePanel-container\">\r\n      <span className=\"NameScorePanel-name\">{ name }</span>\r\n      {score !== null && score !== NaN && \r\n        <span className=\"NameScorePanel-score\">{ score }</span>\r\n      }\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default NameScorePanel\r\n","import './QuestionLoading.css';\r\n\r\nfunction QuestionLoading() {\r\n  return (\r\n    <div className=\"QuestionLoading-container\">\r\n      <div className=\"spinner-border mb-2\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n      <h3 className=\"text-light\">Get Ready!</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionLoading\r\n","import './QuestionOption.css';\r\n\r\nfunction QuestionOption({letter, value, color, disabled, onClick}) {\r\n\r\n  let className = `text-${color} theme-font QuestionOption`;\r\n\r\n  return (\r\n    <button className={className} onClick={onClick} value={value} disabled={disabled}>\r\n      {letter}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default QuestionOption;\r\n","import './QuestionOptions.css';\r\nimport { useState } from 'react';\r\nimport Socket from '../../services/SocketService';\r\nimport QuestionOption from './QuestionOption/QuestionOption';\r\n\r\nfunction QuestionOptions({count}) {\r\n  const [selectedOption, setSelectedOption] = useState(undefined);\r\n  const letters = [\r\n    'A', 'B', 'C', 'D'\r\n  ];\r\n  const colors = [\r\n    'red', 'purple', 'green', 'yellow'\r\n  ];\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    let value = parseInt(e.currentTarget.value);\r\n    setSelectedOption(value);\r\n    Socket.emit('selectOption', value);\r\n  }\r\n\r\n  let options = [];\r\n  for (let i = 0; i < count; i++) {\r\n    options.push(<QuestionOption \r\n      onClick={onSubmit} \r\n      value={i} \r\n      letter={letters[i]} \r\n      color={(selectedOption === undefined || selectedOption === i) ? colors[i] : 'gray'} \r\n      disabled={selectedOption !== undefined} />\r\n    );  \r\n  }\r\n  \r\n  return (\r\n    <div className=\"QuestionOptions-container\">\r\n      <div className=\"QuestionOptions-options-container\">\r\n        {options}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionOptions\r\n","import { Modal, Button } from 'react-bootstrap';\r\n\r\nfunction StatusModal(props) {\r\n\r\n  function closeModal() {\r\n    props.setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.isOpen} onHide={closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.body}</Modal.Body>\r\n      <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StatusModal;\r\n","import './QuestionResult.css';\r\n\r\nfunction QuestionResult({isCorrect, score}) {\r\n\r\n  let text = isCorrect ? 'Correct!' : 'Incorrect!';\r\n  let icon = isCorrect ? 'check' : 'close';\r\n  let className = isCorrect ? 'bg-success' : 'bg-danger';\r\n  className += \" QuestionResult-container\";\r\n\r\n  return (\r\n    <div className={className}>\r\n      <h2 className=\"QuestionResult-text\">{text}</h2>\r\n      <div className=\"QuestionResult-icon\">\r\n        <i className=\"material-icons\">{icon}</i>\r\n      </div>\r\n      <span className=\"QuestionResult-points\">+{score}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionResult;\r\n","import { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Socket from './services/SocketService';\nimport LocalStorageService from './services/LocalStorageService';\nimport Join from './components/Join/Join';\nimport WaitingRoom from './components/WaitingRoom/WaitingRoom';\nimport QuitBtn from './components/QuitBtn/QuitBtn';\nimport NameScorePanel from './components/NameScorePanel/NameScorePanel';\nimport QuestionLoading from './components/QuestionLoading/QuestionLoading';\nimport QuestionOptions from './components/QuestionOptions/QuestionOptions';\nimport StatusModal from './components/StatusModal/StatusModal';\nimport QuestionResult from './components/QuestionResult/QuestionResult';\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [uuid, setUuid] = useState(LocalStorageService.getItem('uuid'));\n  const [name, setName] = useState(LocalStorageService.getItem('name'));\n  const [partyId, setPartyId] = useState(LocalStorageService.getItem('partyId'));\n  const [score, setScore] = useState(0);\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState('');\n  const [modalBody, setModalBody] = useState('');\n\n  const scoreRef = useRef();\n\n  scoreRef.current = score;\n\n  const initView = (\n    <Join \n      name={name} \n      partyId={partyId} \n      emitName={setName} \n      emitPartyId={setPartyId} \n      setShowModal={setShowModal} \n      setModalTitle={setModalTitle}\n      setModalBody={setModalBody} />\n  )\n  const [view, setView] = useState(initView);\n\n  useEffect(() => {\n    Socket.on('partyJoined', ({ partyId, uuid }) => {\n      // store these\n      LocalStorageService.setItem('partyId', partyId);\n      LocalStorageService.setItem('uuid', uuid);\n      setIsConnected(true);\n      setView(<WaitingRoom />)\n      console.log(`Party ${partyId} joined!`)\n    })\n\n    Socket.on('partyEnded', () => {\n      setIsConnected(false);\n      setScore(0);\n      setModalTitle('Disconnected');\n      setModalBody('You were disconnected from the party because it ended 😥');\n      setShowModal(true);\n      setView(initView);\n    });\n\n    Socket.on('questionLoading', () => {\n      setView(<QuestionLoading />)\n    });\n\n    Socket.on('showOptions', (count) => {\n      setView(<QuestionOptions count={count} />);\n    })\n\n    Socket.on('questionResult', handleQuestionResult);\n\n    Socket.on('disconnect', () => {\n      console.log('DISCONNECTED');\n      setIsConnected(false);\n      setPartyId(LocalStorageService.getItem('partyId'));\n      setScore(0);\n      setView(initView);\n      Socket.connect();\n    })\n\n    return () => {\n      Socket.off('partyJoined');\n      Socket.off('partyEnded');\n    }\n  }, []);\n\n  function handleQuestionResult({isCorrect, points}) {\n    setScore(scoreRef.current + points);\n    setView(<QuestionResult isCorrect={isCorrect} score={points} />)\n  }\n\n  return (\n    <div className=\"App bg-primary\">\n      <div className=\"App-content\">\n        <StatusModal title={modalTitle} body={modalBody} isOpen={showModal} setIsOpen={setShowModal} />\n        {isConnected && \n          <QuitBtn />\n        }\n        {view}\n        {isConnected && \n          <NameScorePanel name={name} score={score} />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}